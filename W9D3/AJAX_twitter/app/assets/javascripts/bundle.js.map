{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,GAAG;AACxB;AACA,cAAc,aAAa;AAC3B;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA,qBAAqB,GAAG;AACxB;AACA,cAAc,aAAa;AAC3B;AACA,KAAK;AACL;AACA;;AAEA;;;;;;;;;;AC7BA,gBAAgB,mBAAO,CAAC,0CAAY;;AAEpC,qBAAqB;AACrB,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA;;;;AAIA;;AAEA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA,8BAA8B,YAAY;AAC1C;AACA,uBAAuB,sBAAsB;AAC7C;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;;;;;;UCpFA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,qBAAqB,mBAAO,CAAC,oDAAiB;;;AAG9C;AACA,iDAAiD,uBAAuB;AACxE,CAAC,E","sources":["./frontend/api_util.js","./frontend/follow_toggle.js","webpack/bootstrap","./frontend/twitter.js"],"sourcesContent":["// constructor(el) { // el is the button, we add these to each button\n//   this.$el = $(el);\n//   this.userId = this.$el.data(\"user-id\");\n//   this.followState = this.$el.data(\"initial-follow-state\");\n\n//   this.$el.text(this.render());\n//   this.$el.on(\"click\", this.handleClick.bind(this));\n// }\n\nconst APIUtil = {\n  followUser: id => {\n    $.ajax({\n      url: `/users/${id}/follow`,\n      method: \"post\",\n      data: { user_id: id },\n      dataType: \"JSON\"\n    })\n  },\n\n  unfollowUser: id => {\n    $.ajax({\n      url: `/users/${id}/follow`,\n      method: \"delete\",\n      data: { user_id: id },\n      dataType: \"JSON\"\n    })\n  }\n};\n\nmodule.exports = APIUtil;","const APIUtil = require(\"./api_util\");\n\nclass FollowToggle { // object information such as was it clicked, who clicked it --> t/f\n    constructor(el) { // el is the button, we add these to each button\n        this.$el = $(el);\n        this.userId = this.$el.data(\"user-id\");\n        this.followState = this.$el.data(\"initial-follow-state\");\n\n        this.$el.text(this.render());\n        this.$el.on(\"click\", this.handleClick.bind(this));\n    }\n\n    render() {\n        console.log(this.followState)\n        // debugger\n        if (this.followState === \"unfollowed\") {\n            this.$el.prop(\"disabled\", false);\n\n            return \"follow\";\n        } else if (this.followState === \"followed\") {\n            this.$el.prop(\"disabled\", false);\n            return \"unfollow\";\n        } else {\n            this.$el.prop(\"disabled\", true);\n            return;\n        }\n\n\n\n    }\n\n    handleClick(e) {\n        e.preventDefault();\n\n\n        if (this.followState === \"followed\") {\n            this.followState = \"unfollowing\";\n            this.render();\n\n\n            APIUtil.unfollowUser(this.userId).then(() => {\n                this.followState = \"unfollowed\";\n                this.$el.text(this.render());\n            });\n        } else {\n            this.followState = \"following\";\n            this.render();\n            APIUtil.followUser(this.userId).then(() => {\n                this.followState = \"followed\";\n                this.$el.text(this.render());\n            });\n        }\n\n        // if (this.followState === \"unfollowed\") {\n\n\n            // const promise = APIUtil.followUser(this.userId);\n\n            // promise.then(() => {\n            //     this.followState = \"followed\";\n            //     this.$el.text(this.render());\n            // });\n        // } else {\n            // const promise = APIUtil.unfollowUser(this.userId);\n            // promise.then(() => {\n            //     this.followState = \"unfollowed\";\n            //     this.$el.text(this.render());\n            // });\n        // }\n\n        // $.ajax({\n        //     url: `/users/${this.userId}/follow`,\n        //     method: (this.followState === \"followed\") ? (\"delete\") : (\"post\"),\n        //     data: { user_id: this.userId },\n        //     dataType: \"JSON\"\n        // }).then(() => {\n        //     // console.log(\"Success!\");\n        //     this.followState = (this.followState === \"unfollowed\") ? (\"followed\") : (\"unfollowed\");\n        //     this.$el.text(this.render());\n        //     // console.log(this);\n        // })\n    }\n}\n\nmodule.exports = FollowToggle;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const FollowToggle = require(\"./follow_toggle\");\n\n\n$(function (){\n  $(\"button.follow-toggle\").each((idx, btn) => { new FollowToggle(btn) });\n});"],"names":[],"sourceRoot":""}